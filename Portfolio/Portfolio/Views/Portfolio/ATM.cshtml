
@{
    ViewData["Title"] = "ATM";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid">
    <h2>SafeNet Consulting Problem</h2>
    <hr />
    <div> Goal: </div>
    <div> To create a cash machine (ATM) program in C# which has been given as the technical portion of interviews.</div>
    <div> Focus: </div>
    <div> To practice writing clean code and commenting in the C# language.</div>
    <div>Team Members: </div>
    <div>Individual Project.</div>
    <div>NO LINK</div>
    <!--<a href="https://github.com/ZachKubinski/FileIO.git"> LINK </a>-->
    <hr />
    <div class="container-fluid">
        <div class="col-lg-6">
            <h3>Directions: </h3>
            <div>
                <!-- Modal Button -->
                <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">SafeNet Consulting Problem - C#</button>
                <!-- Modal -->
                <div id="myModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal Content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">SafeNet Consulting Problem - C#</h4>
                            </div>
                            <div class="modal-body">
                                <p>
                                    Standard Language Problem
                                    You are to write a command-line cash machine (ATM).
                                    The cash machine is pre-stocked with the following denominations:
                                    • $100 - 10 Bills
                                    • $50 - 10 Bills
                                    • $20 - 10 Bills
                                    • $10 - 10 Bills
                                    • $5 - 10 Bills
                                    • $1 - 10 Bills

                                    Your application should take input from the standard input stream and support the following commands:
                                    • R - Restocks the cash machine to the original pre-stock levels defined above
                                    • W (dollar amount)
                                    - Withdraws that amount from the cash machine (e.g. "W $145")
                                    • I (denominations)
                                    - Displays the number of bills in that denomination present in the cash machine (e.g. I $20 $10 $1)
                                    • Q - Quits the application

                                    The withdrawals from the cash machine should dispense cash in the most efficient manner possible, with the least amount of bills.  After a withdrawal, the program should display success or failure and the remaining balance in the cash machine (sample output below).  For an inquiry, the program should display the number of bills in the denominations specified (sample output below).  After a restock, the program should display the balance in the cash machine (same as after a withdrawal).  If the input is not understood, "Invalid Command" should be displayed.  No additional messages, prompts or errors should be displayed.

                                    Sample input/ouput.  Note that the > are only in the sample to denote input and would not actually be a part of the problem as no additional prompts should be displayed.
                                    > W $208
                                    Success: Dispensed $208
                                    Machine balance:
                                    $100 - 8
                                    $50 - 10
                                    $20 – 10
                                    $10 - 10
                                    $5 - 9
                                    $1 - 7
                                    > W $9
                                    Success: Dispensed $9
                                    Machine balance:
                                    $100 - 8
                                    $50 - 10
                                    $20 - 10
                                    $10 - 10
                                    $5 - 8
                                    $1 - 3
                                    > W $9
                                    Failure: insufficient funds
                                    > I $20 $1 $100
                                    $20 - 10
                                    $1 - 3
                                    $100 – 8
                                    > R
                                    Machine balance:
                                    $100 - 10
                                    $50 - 10
                                    $20 - 10
                                    $10 - 10
                                    $5 - 10
                                    $1 - 10
                                    > K
                                    Failure: Invalid Command

                                    You may use the language of your choice to implement the solution.  Providing unit tests is encouraged, but not required.  No external files or databases are required (i.e. the initial cash machine amount and restock levels can be hard-coded).
                                </p>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <h3>Test Cases:  </h3>
            <img class="img-responsive" src="~/images/ATMConsole.JPG" />
        </div>
    </div>
</div>